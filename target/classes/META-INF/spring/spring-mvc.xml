<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/part_web.properties</value>
            </list>
        </property>
    </bean>
    <context:component-scan base-package="com.part.web.controller" />
    <mvc:annotation-driven>
        <!--     解决返回String时乱码-->  
        <mvc:message-converters register-defaults="true">  
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
                 <property name="supportedMediaTypes">
                    <list>    
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>    
                </property>    
            </bean>
        </mvc:message-converters>
        <mvc:argument-resolvers>
             <bean class="com.part.web.core.method.annotation.FormModelMethodArgumentResolver"/>
         </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->    
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">    
        <property name="supportedMediaTypes">    
            <list>    
                <value>text/html;charset=UTF-8</value>    
            </list>    
        </property>    
    </bean>    
      
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->    
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">    
        <property name="messageConverters">    
            <list>    
                <ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->    
            </list>    
        </property>    
    </bean>

    <!-- 资源 -->
    <mvc:resources location="/resources/" mapping="/resources/**" />

    <mvc:interceptors>
    
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
	        <bean class="com.part.web.interceptor.WebInterceptor" />
        </mvc:interceptor>
       <!--  <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/health/check"/>
            <bean class="com.meiren.market.web.interceptor.LoginInterceptor" >
                <property name="loginUrl" value="${account.login.url}"/>
            </bean>
        </mvc:interceptor> -->
    </mvc:interceptors>

    <!-- 视图 -->
    <!-- 配置Velocity引擎 -->
    <bean id="velocityConfigurer"
        class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/vm" />
        <!-- Velocity属性配置 -->
        <property name="velocityProperties">
            <props>
                <prop key="input.encoding">UTF-8</prop><!-- 指定模板引擎进行模板处理的编码 -->
                <prop key="output.encoding">UTF-8</prop><!-- 指定输出流的编码 -->
                <prop key="velocimacro.permissions.allow.inline">true</prop><!-- 指定输出流的编码 -->
                <prop key="contentType">text/html;charset=UTF-8</prop><!-- contentType -->
<!--                 <prop key="velocimacro.library">macros.vm</prop>Velocimacro 模板库的列表 -->
                <prop key="velocimacro.library.autoreload">true</prop>
                <prop key="velocity.properties suchthatstringliterals.interpolate">false</prop> 
                <prop key="velocimacro.context.localscope">false</prop> 
            </props>
        </property>
    </bean>

    <!-- 配置Velocity视图解析器 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="cache" value="true" />
        <property name="prefix" value="/screen" />
        <property name="suffix" value=".vm" />
        <property name="toolboxConfigLocation">
            <value>/WEB-INF/tools.xml</value>
        </property>
        <property name="dateToolAttribute" value="date" /><!--日期函数名称 -->
        <property name="numberToolAttribute" value="number" /><!--数字函数名称 -->
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="requestContextAttribute" value="rc" /><!--request属性引用名称 -->
        <property name="allowSessionOverride" value="true" />
        <property name="allowRequestOverride" value="true" />
        <property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持 -->
        <property name="exposeRequestAttributes" value="true" /><!--是否开放request属性 -->
        <property name="exposeSessionAttributes" value="true" />
    </bean>


</beans>
